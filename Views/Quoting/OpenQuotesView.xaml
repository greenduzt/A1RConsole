<UserControl x:Class="A1RConsole.Views.Quoting.OpenQuotesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:A1RConsole.Views.Quoting"
             mc:Ignorable="d" d:DesignWidth="1050" d:DesignHeight="800">
    <Grid>
        <TextBlock Background="#c33333" Foreground="White" Padding="0,4,0,0" Margin="0,10,0,0" TextWrapping="Wrap" Text="OPEN QUOTES" TextAlignment="Center" FontWeight="Bold" FontSize="16" FontFamily="Arial" Height="23" VerticalAlignment="Top"/>
        <Button Content="VIEW" HorizontalAlignment="Left" VerticalAlignment="Top" Width="62" Height="24" HorizontalContentAlignment="Left" Margin="203,64,0,0" 
            Command="{Binding ViewDataCommand}" TabIndex="3" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontFamily" Value="Arial"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock Text="Generate a list of open quotes" TextAlignment="Left"  TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Arial" FontSize="12" VerticalAlignment="Top" Margin="10,65,0,0" Padding="4" Width="195" Height="21"/>
        <DataGrid x:Name="DgOpenQuotes"  BorderBrush="#FFE0E0E0" HorizontalGridLinesBrush="#FF9C9C9C" VerticalGridLinesBrush="#FF9C9C9C" 
                  HorizontalScrollBarVisibility="Disabled" FontFamily="Verdana" IsReadOnly="True" 
                  ItemsSource="{Binding OpenQuotes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" Background="#e1e9f7" 
                  CanUserAddRows="False"   BorderThickness="0" Margin="5,107,5,98" >
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#FF8F8F8F"/>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Quote No" Width="82" IsReadOnly="False" Binding="{Binding QuoteNo, Mode=TwoWay}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="ToolTip" Value="Delivery Docket No" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Right" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="ToolTip" Value="Delivery Docket No" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Quoted Date -->
                <DataGridTextColumn Header="Quoted Date" Width="105" IsReadOnly="False" Binding="{Binding QuoteDate, Mode=TwoWay, StringFormat=dd/MM/yyyy}"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Customer -->
                <DataGridTextColumn Header="Customer" Width="250" IsReadOnly="False" Binding="{Binding Customer.CompanyName, Mode=TwoWay}"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Project Name -->
                <DataGridTextColumn Header="Project Name" Width="300"  IsReadOnly="False" Binding="{Binding ProjectName, Mode=TwoWay}"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Product Details -->
                <DataGridTextColumn Header="Product Details" Width="*" IsReadOnly="False" Binding="{Binding ProductDetails, Mode=TwoWay}"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="VerticalAlignment" Value="Center" />

                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- Contact -->
                <DataGridTextColumn Header="Contact" Width="250" IsReadOnly="False" Binding="{Binding ContactPerson.ContactPersonName, Mode=TwoWay}"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- View/Update Quote -->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="VIEW" HorizontalAlignment="Center" VerticalAlignment="Center" Width="65" Height="30" HorizontalContentAlignment="Left" Margin="0,0,0,0" Command="{Binding DataContext.ViewUpdateCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" ToolTip="View Quote">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="#666666"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="FontSize" Value="11"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#4c4c4c"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <TextBlock Text="{Binding NoOfQuoteStr}" Background="AliceBlue" FontWeight="Bold" TextAlignment="Right"  TextWrapping="Wrap" HorizontalAlignment="Right" FontFamily="Verdana" FontSize="12" VerticalAlignment="Top" Margin="0,66,10,0" Padding="4" Width="auto" />
        <Button Content="EXPORT TO PDF" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="118" Height="24" HorizontalContentAlignment="Left" Margin="0,0,5,59" 
            Command="{Binding ExportToPDFCommand}" TabIndex="3" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontFamily" Value="Arial"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="EXPORT TO EXCEL" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="127" Height="24" HorizontalContentAlignment="Left" Margin="0,0,123,59" 
            Command="{Binding ExportToExcelCommand}" TabIndex="3" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontFamily" Value="Arial"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
