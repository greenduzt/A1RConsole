<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              
             xmlns:Core="clr-namespace:A1RConsole.Core" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"      
             xmlns:currency="clr-namespace:CurrencyTextBoxControl;assembly=CurrencyTextBoxControl"
             x:Class="A1RConsole.Views.Quoting.NewQuoteView" 
             xmlns:TextBehaviors="clr-namespace:A1RConsole.Core"
             mc:Ignorable="d" 
             d:DesignWidth="1050" d:DesignHeight="800" MinHeight="700">

    <!--xmlns:ComboWaterMark="clr-namespace:A1RConsole.Core"-->
    <UserControl.Resources>

        <Style x:Key="alternatingStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#ccf3ff"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#ccf3ff"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Orange"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors).CurrentItem.ErrorContent, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="527*"/>
            <RowDefinition Height="144*"/>
            <RowDefinition Height="129*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="292*"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="242*"/>
            <ColumnDefinition Width="169*"/>
            <ColumnDefinition Width="185*"/>
            <ColumnDefinition Width="161*"/>
        </Grid.ColumnDefinitions>

        <Border Background="#e0e0e0" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Margin="2,50,0,0" Height="220" VerticalAlignment="Top" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="29*"/>
                    <ColumnDefinition Width="30*"/>
                    <ColumnDefinition Width="15*"/>
                    <ColumnDefinition Width="30*"/>
                </Grid.ColumnDefinitions>
                <Label  Content="Customer Name" Margin="4,2,0,0" FontFamily="Verdana"  Height="23" VerticalAlignment="Top"  />
                <ComboBox x:Name="cmbCustomers" 
                    ItemsSource="{Binding CustomerList, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" 
                    DisplayMemberPath="CompanyName"       
                    SelectedItem="{Binding SelectedCustomer,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"       	 
                    SelectedValue="{Binding SelectedCustomer.CompanyName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"       
                    SelectedValuePath="CompanyName"    
                    Text="{Binding PrepaidCustomerName, UpdateSourceTrigger=PropertyChanged}"    
                    TextSearch.TextPath="CompanyName"      
					IsTextSearchEnabled="True"
					TabIndex="1"  
					IsEditable="True"        	
					Background="#e1e9f7" Foreground="Black" FontFamily="Verdana" Margin="1,3,10,0" Height="23 " VerticalAlignment="Top" Grid.ColumnSpan="3" Grid.Column="1">
                    <!--<i:Interaction.Behaviors>
                            <ComboWaterMark:WatermarkBehavior Text="Select..." />
                        </i:Interaction.Behaviors>-->
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp" >
                            <i:InvokeCommandAction Command="{Binding CustomerChangedCommand}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <i:InvokeCommandAction Command="{Binding CustomerChangedCommand}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->

                </ComboBox>

                <Label  Content="Customer Type" Margin="4,25,3,0" FontFamily="Verdana"  Height="28" VerticalAlignment="Top"  />
                <TextBox x:Name="txtCustomerType" TabIndex="3" Height="23" Margin="1,51,10,0" TextWrapping="Wrap" TextAlignment="Left" Text="{Binding Quote.ProjectName}" VerticalAlignment="Top"  Background="White" Padding="2,3,0,0" IsEnabled="{Binding ProjectNameEnabled}" Grid.ColumnSpan="3" Grid.Column="1" />
                <Label  Content="Project Name" Margin="4,48,3,0" FontFamily="Verdana" Height="28" VerticalAlignment="Top"  />
                <ComboBox                                   
								TabIndex="2"  
								IsEditable="False"   
								SelectedValuePath="Content"
								Background="#e1e9f7" Foreground="Black" FontFamily="Verdana" Margin="1,27,0,0" Height="23" VerticalAlignment="Top" SelectedValue="{Binding CustomerType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CustomerTypeEnabled}" Grid.Column="1" >
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Background" Value="#e1e9f7"/>
                            <Setter Property="BorderBrush" Value="#e1e9f7"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                    <!--<ComboBoxItem Content="Select"/>-->
                    <ComboBoxItem Content="Prepaid" />
                    <ComboBoxItem Content="Account" />
                </ComboBox>
                <!--<TextBox x:Name="txtProjectName" TabIndex="1" Height="23" Margin="1,27,10,0" TextWrapping="Wrap" IsReadOnly="True" Text="{Binding CustomerType, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"  Background="White" Padding="2,3,0,0" TextAlignment="Left" IsEnabled="{Binding CustomerTypeEnabled}" Grid.ColumnSpan="3" Grid.Column="1" />-->
                <Label  Content="Contact Person" Margin="4,73,3,0" FontFamily="Verdana" Height="28" VerticalAlignment="Top"  />
                <ComboBox x:Name="cmbContactPerson" 
                	IsTextSearchEnabled="True"
                	TabIndex="4"  
                	IsEditable="False"      
                    IsEnabled="{Binding ContactPersonEnabled}"
                	ItemsSource="{Binding SelectedCustomer.ContactPerson, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                	DisplayMemberPath="ContactPersonName"  
                	SelectedValuePath="ContactPersonName"   
                    Text="{Binding Quote.ContactPerson.ContactPersonName, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"     
                    TextSearch.TextPath="ContactPersonName"
                	SelectedItem="{Binding Quote.ContactPerson, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"										
                	Background="#e1e9f7" Foreground="Black" FontFamily="Verdana" Margin="1,75,10,0" Height="23 " VerticalAlignment="Top" Grid.ColumnSpan="3" Grid.Column="1" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <i:InvokeCommandAction Command="{Binding ContactPersonChangedCommand}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                        <!--<i:EventTrigger EventName="DropDownClosed" >
                            <i:InvokeCommandAction Command="{Binding ContactPersonOnChangedCommand}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>-->
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBox  Text="{Binding Quote.ContactPerson.PhoneNumber1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="1,99,0,0" Padding="3" FontFamily="Verdana" Height="23" VerticalAlignment="Top" Visibility="{Binding ContactPersonPhoneVisibility}" Background="#FFFFFFFF" BorderBrush="#FFABADB3" Grid.Column="1" TabIndex="6" />
                <TextBox x:Name="txtOtherContactName" TabIndex="5" Height="23" Margin="1,99,10,0" TextWrapping="Wrap" Text="{Binding OtherContactName, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"  Background="White" Padding="2,3,0,0" TextAlignment="Left" Visibility="{Binding OtherContactPersonVisibility}" IsEnabled="{Binding ContactPersonEnabled}" Grid.Column="1" Grid.ColumnSpan="3" />
                <TextBox x:Name="txtOtherContactNamePhone1" TabIndex="9" Height="23" Margin="1,123,0,0" TextWrapping="Wrap" Text="{Binding OtherContactNamePhone1, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"  Background="White" Padding="2,3,0,0" TextAlignment="Left" Visibility="{Binding OtherContactPersonVisibility}" Grid.Column="1" IsEnabled="{Binding ContactPersonEnabled}">
                    <!--<i:Interaction.Behaviors>
                        <Core:TextBoxInputBehavior InputMode="DigitInput" JustPositivDecimalInput="True" />
                    </i:Interaction.Behaviors>-->
                </TextBox>
                <Label  Content="Enter Name" Margin="4,97,0,0" FontFamily="Verdana" Height="28" VerticalAlignment="Top" Visibility="{Binding OtherContactPersonVisibility}"  />
                <Label  Content="Enter Phone No" Margin="4,121,3,-1" FontFamily="Verdana" Height="28" VerticalAlignment="Top" Visibility="{Binding OtherContactPersonVisibility}"  />
                <Label  Content="Phone Number1" Margin="4,97,3,0" FontFamily="Verdana" Height="28" VerticalAlignment="Top" Visibility="{Binding ContactPersonPhoneVisibility}"  />
                <TextBox Padding="3" Text="{Binding Quote.ContactPerson.PhoneNumber2}" Margin="0,99,10,0" FontFamily="Verdana" Height="23" VerticalAlignment="Top" Visibility="{Binding ContactPersonPhoneVisibility}" Background="#FFFFFFFF" BorderBrush="#FFABADB3" Grid.Column="3" TabIndex="7" />
                <TextBlock  Text="PNo 2" Padding="0,5,3,0" TextAlignment="Right"  Margin="0,97,0,0" FontFamily="Verdana" Height="28" VerticalAlignment="Top" Visibility="{Binding ContactPersonPhoneVisibility}" Grid.Column="2"  />
                <TextBox x:Name="txtOtherContactNamePhone2" TabIndex="10" Height="23" Margin="0,123,10,0" TextWrapping="Wrap" Text="{Binding OtherContactNamePhone2, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"  Background="White" Padding="2,3,0,0" TextAlignment="Left" Visibility="{Binding OtherContactPersonVisibility}" IsEnabled="{Binding ContactPersonEnabled}" Grid.Column="3">
                    <!--<i:Interaction.Behaviors>
                        <Core:TextBoxInputBehavior InputMode="DigitInput" JustPositivDecimalInput="True" />
                    </i:Interaction.Behaviors>-->
                </TextBox>
                <TextBlock  Text="PNo 2" TextAlignment="Right" Margin="0,121,0,-1" Padding="0,5,3,0" FontFamily="Verdana" Height="28" VerticalAlignment="Top" Visibility="{Binding OtherContactPersonVisibility}" Grid.Column="2"  />
                <Label  Content="Email Address" Margin="4,144,3,0" FontFamily="Verdana" Height="28" VerticalAlignment="Top" Visibility="{Binding OtherContactPersonVisibility}"  />
                <TextBox x:Name="txtOtherContactNameEmail" TabIndex="11" Height="23" Margin="1,147,10,0" TextWrapping="Wrap" Text="{Binding OtherContactNameEmail, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"  Background="White" Padding="3,1,3,3" TextAlignment="Left" Visibility="{Binding OtherContactPersonVisibility}" IsEnabled="{Binding ContactPersonEnabled}" Grid.Column="1" Grid.ColumnSpan="3" />
                <!--<Label Content="*" FontWeight="Black" Padding="0" Foreground="Red" Margin="0,0,0,15" Grid.Column="3" Visibility="{Binding OtherContactPersonVisibility}" HorizontalAlignment="Right" Width="10" Height="11" VerticalAlignment="Bottom" />-->

                <TextBox  Text="{Binding Quote.ContactPerson.Email}" Padding="3" Margin="1,123,10,0" FontFamily="Verdana" Height="23" VerticalAlignment="Top" Visibility="{Binding ContactPersonPhoneVisibility}" Background="#FFFFFFFF" BorderBrush="#FFABADB3" Grid.Column="1" TabIndex="8" Grid.ColumnSpan="3" />

                <TextBlock  Text="Email Address" Padding="0,5,3,0" TextAlignment="Right"  Margin="7,121,0,0" FontFamily="Verdana" Height="28" VerticalAlignment="Top" Visibility="{Binding ContactPersonPhoneVisibility}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="90"  />
                <!--<Label Content="*" FontWeight="Black" Padding="0" Foreground="Red" Margin="0,0,0,64" Grid.Column="3" Visibility="{Binding OtherContactPersonVisibility}" HorizontalAlignment="Right" Width="10" Height="11" VerticalAlignment="Bottom" />-->
                <!--<Label Content="*" FontWeight="Black" Padding="0" Foreground="Red" Margin="0,0,0,39" Grid.Column="2" Visibility="{Binding OtherContactPersonVisibility}" HorizontalAlignment="Left" Width="10" Height="11" VerticalAlignment="Bottom" />-->

                <CheckBox Content="Add this customer to database" IsChecked="{Binding AddCustomerToDatabase,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Height="21" Margin="0,171,-9,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="215" TabIndex="12" Visibility="{Binding AddCustomerVisibility}" Grid.Column="1" Grid.ColumnSpan="3" />

                <Grid Grid.ColumnSpan="4" Visibility="{Binding PhoneCopyVisibility}" Height="40" VerticalAlignment="Bottom" Margin="0,0,0,-1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="17*"/>
                        <RowDefinition Height="24*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Content="Tick to copy phone number" IsChecked="{Binding IsCopyPhone,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Height="16" VerticalAlignment="Top" TabIndex="12" Padding="0" Margin="1,0,0,0" Grid.RowSpan="2" IsEnabled="{Binding TickCopyPhoneEnabled}" />
                    <TextBox x:Name="txtCompPhone" TabIndex="11" Height="20" Margin="2,0,3,0" TextWrapping="Wrap" Text="{Binding SelectedCustomer.CompanyTelephone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"  Background="White" Padding="0" TextAlignment="Left" Grid.Row="1" IsEnabled="False" />

                    <CheckBox Content="Tick to copy email" IsChecked="{Binding IsCopyEmail,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Height="16" VerticalAlignment="Top" TabIndex="12" Padding="0" Grid.Column="1" Margin="2,0,0,0" Grid.RowSpan="2" IsEnabled="{Binding TickCopyEmailEnabled}" />
                    <TextBox x:Name="txtCompEmail" TabIndex="11" Height="20" Margin="3,0,2,0" TextWrapping="Wrap" Text="{Binding SelectedCustomer.CompanyEmail, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"  Background="White" Padding="0" TextAlignment="Left" Grid.Column="1" Grid.Row="1" IsEnabled="False" />
                </Grid>


            </Grid>
        </Border>
        <Border Background="#e0e0e0" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Margin="1,50,2,0" Height="220" VerticalAlignment="Top" Grid.Column="5" >
            <Grid>
                <Label  Content="Quote Date" Margin="4,1,0,0" FontFamily="Verdana" Height="24" VerticalAlignment="Top" HorizontalAlignment="Left" Width="87"  />
                <TextBlock x:Name="txtTermsID_Copy"  Height="24" Margin="91,1,4,0" TextWrapping="Wrap"  Text="{Binding Quote.QuoteDate, StringFormat=dd/MM/yyyy}" VerticalAlignment="Top"  Background="White" Padding="2,3,0,0" />
                <Label  Content="Sales Person" Margin="4,27,0,0" FontFamily="Verdana" Height="24" VerticalAlignment="Top" HorizontalAlignment="Left" Width="87"  />
                <TextBlock x:Name="txtUnit_Copy4" Height="23" Margin="91,28,4,0" TextWrapping="Wrap" Text="{Binding Quote.User.FullName}" VerticalAlignment="Top"  Background="White" RenderTransformOrigin="0.49,0.522" Padding="2,3,0,0" />
                <TextBlock Visibility="{Binding DiscountAppliedTextVisibility}" Text="CATEGORY DISCOUNT APPLIED" FontWeight="Bold" FontSize="10" Foreground="White" Background="Green" TextAlignment="Right" Padding="0,5,5,0" Margin="0,188,0,3" />
            </Grid>
        </Border>
        <Button Content="CLOSE" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="62" Height="24" HorizontalContentAlignment="Left" Margin="0,0,4,2" Command="{Binding CloseCommand}" TabIndex="24" ToolTip="Close form" Grid.Column="5" Grid.Row="2">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Border Margin="1,88,1,0" Height="182" VerticalAlignment="Top" Background="#e0e0e0" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Grid.Column="2" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="346*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Label  Content="Ship To" Margin="1,-2,0,0" FontFamily="Verdana" Height="32" VerticalAlignment="Top" HorizontalAlignment="Left" Width="54"  />
                <ComboBox 
        		    x:Name="cmbShipTo"
        		    TabIndex="13"  
        		    IsEditable="False"   
        		    SelectedValuePath="Content"
        		    Background="#e1e9f7" Foreground="Black" FontFamily="Verdana" Margin="59,1,0,0" Height="23" VerticalAlignment="Top" 
                    SelectedValue="{Binding SelectedShipTo}" IsEnabled="{Binding ShipToEnabled}" >
                    <ComboBoxItem Content="Customer Address"/>
                    <ComboBoxItem Content="A1 Rubber QLD"/>
                    <ComboBoxItem Content="A1 Rubber NSW" />
                </ComboBox>

                <TextBlock Text="{Binding ShipToText}" Margin="59,48,3,0" Height="23" VerticalAlignment="Top" Grid.ColumnSpan="2" />

                <Grid Margin="0,22,0,0" Visibility="{Binding ShippingAddressVisibility}" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="23*"/>
                        <ColumnDefinition Width="30*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Address" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,3,0,0" Width="58" Height="26"/>
                    <TextBox TextWrapping="Wrap" Text="{Binding ShippingAddress,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="59,3,2,0" Height="23" Padding="0,3,0,0" TabIndex="14" IsEnabled="{Binding ShipToEnabled}" Grid.ColumnSpan="2" />

                    <Label Content="City" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,26,0,0" Width="58" Height="26"/>
                    <TextBox TextWrapping="Wrap" Text="{Binding ShippingCity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="59,27,2,0" Height="23" Padding="0,3,0,0" TabIndex="15" IsEnabled="{Binding ShipToEnabled}" Grid.ColumnSpan="2" />
                    <Label Content="State" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,50,0,0" Width="58" Height="26"/>

                    <TextBox TextWrapping="Wrap" Text="{Binding ShippingState,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="59,51,0,0" Height="23" Padding="0,3,0,0" TabIndex="16" IsEnabled="{Binding ShipToEnabled}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="64" />
                    <Label Content="Country" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="1,73,0,0" Width="58" Height="26"/>
                    <TextBox TextWrapping="Wrap" Text="{Binding ShippingCountry,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="59,75,0,0" Height="23" Padding="0,3,0,0" TabIndex="18" IsEnabled="{Binding ShipToEnabled}" />
                    <Label Content="Post Code" VerticalAlignment="Top" Margin="0,55,56,0" Grid.Column="1" HorizontalAlignment="Right" Width="56" Padding="0" Height="16" />
                    <TextBox TextWrapping="Wrap" Text="{Binding ShippingPostCode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="0,51,2,0" Height="23" Padding="0,3,0,0" TabIndex="17" IsEnabled="{Binding ShipToEnabled}" Grid.Column="1" HorizontalAlignment="Right" Width="54" />
                    <Label Content="Add this shipping address to customer profile" Margin="24,99,3,-2" Padding="0" Height="17" VerticalAlignment="Top" FontSize="11" Grid.ColumnSpan="2" />
                    <CheckBox  IsChecked="{Binding AddShippingAddress, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="17" Margin="5,99,0,-2" VerticalAlignment="Top" TabIndex="19" IsEnabled="{Binding AddShippingAddToProfileEnabled, Mode=TwoWay}" HorizontalAlignment="Left" Width="227" Grid.ColumnSpan="2" />
                    <!--<Label Content="to customer profile" Margin="21,85,1,-2" Padding="0" Height="21" VerticalAlignment="Top" FontSize="11" Grid.Column="1" />-->
                </Grid>
            </Grid>
        </Border>

        <Border Margin="0,88,1,0" Height="182" VerticalAlignment="Top" Background="#e0e0e0" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Grid.Column="3" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="346*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Label  Content="Company Contact Details" Margin="1,1,0,0" FontFamily="Verdana" Height="17" Padding="0" VerticalAlignment="Top"  />

                <Grid Margin="0,22,0,0"  Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="39*"/>
                        <ColumnDefinition Width="47*"/>
                        <ColumnDefinition Width="88*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Address" VerticalAlignment="Top" Margin="2,2,0,0" Height="20" Padding="0" />
                    <TextBox TextWrapping="Wrap" Text="{Binding SelectedCustomer.CompanyAddress,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="0,0,2,0" Height="23" Padding="0,3,0,0" TabIndex="14" IsEnabled="False" Grid.Column="1" Grid.ColumnSpan="2" />
                    <Label Content="City" VerticalAlignment="Top" Margin="2,23,0,0" Height="23" Padding="0" />
                    <TextBox TextWrapping="Wrap" Text="{Binding SelectedCustomer.CompanyCity,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="0,24,2,0" Height="23" Padding="0,3,0,0" TabIndex="14" IsEnabled="False" Grid.Column="1" Grid.ColumnSpan="2" />
                    <Label Content="State" VerticalAlignment="Top" Margin="2,49,0,0" Height="24" Padding="0" />
                    <TextBox TextWrapping="Wrap" Text="{Binding SelectedCustomer.CompanyState,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="0,48,0,0" Height="23" Padding="0,3,0,0" TabIndex="16" IsEnabled="False" Grid.Column="1" RenderTransformOrigin="0.5,0.5" />
                    <Label Content="Post Code" VerticalAlignment="Top" Margin="0,52,42,0" Grid.Column="1" HorizontalAlignment="Right" Width="55" Padding="0" Height="16" Grid.ColumnSpan="2" />
                    <TextBox TextWrapping="Wrap" Text="{Binding SelectedCustomer.CompanyPostCode,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="0,48,2,0" Height="23" Padding="0,3,0,0" TabIndex="17" IsEnabled="False" Grid.Column="2" HorizontalAlignment="Right" Width="40" />

                    <Label Content="Country" VerticalAlignment="Top" Margin="2,72,0,0" Height="24" Padding=" 0"/>
                    <TextBox TextWrapping="Wrap" Text="{Binding SelectedCustomer.CompanyCountry,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" TextAlignment="Left" Margin="0,71,2,0" Height="23" Padding="0,3,0,0" TabIndex="14" IsEnabled="False" Grid.Column="1" Grid.ColumnSpan="2" />
                    <Label Content="Copy company address to shipping address" Margin="21,99,2,-2" Padding="0" Height="17" VerticalAlignment="Top" FontSize="11" Grid.ColumnSpan="3" />
                    <CheckBox  IsChecked="{Binding AddCompanyAddressToShipping, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="30" Margin="1,99,-1,0" VerticalAlignment="Top" TabIndex="19" IsEnabled="{Binding AddCcompanyAddToShippingEnabled, Mode=TwoWay}" Grid.ColumnSpan="3" />
                </Grid>
            </Grid>
        </Border>

        <Border Margin="0,50,1,0" Height="220" VerticalAlignment="Top" Background="#e0e0e0" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Grid.Column="4" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="56*"/>
                    <ColumnDefinition Width="99*"/>
                    <ColumnDefinition Width="48*"/>
                </Grid.ColumnDefinitions>
                <Label  Content="Discount" FontFamily="Verdana" Height="32" VerticalAlignment="Top" HorizontalAlignment="Left" Width="65" Margin="0,1,0,0" Grid.ColumnSpan="2"  />
                <TextBlock Text="Tick 'Add this customer to database' to add/update discount" FontWeight="SemiBold" FontSize="10" Foreground="black"  TextAlignment="left" Padding="0" Margin="0,3,2,0" Grid.Column="1" Height="26" VerticalAlignment="Top" TextWrapping="WrapWithOverflow" Visibility="{Binding TickAddThisCusLabel}" />
                <Button Content="ADD/UPDATE" HorizontalAlignment="Right" VerticalAlignment="Top" Width="64" Height="20" HorizontalContentAlignment="Left" Margin="0,5,0,0" Command="{Binding AddUpdateDiscountCommand}"  ToolTip="Add/Update discount" IsEnabled="{Binding AddUpdateActive}" Grid.Column="1" Grid.ColumnSpan="2" TabIndex="21">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="{Binding AddUpdateBackground}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="8"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#4c4c4c"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <ListView ItemsSource="{Binding DisplayDiscountStructure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Stretch" Margin="2,33,2,2" BorderThickness="0"  AlternationCount="2" Grid.ColumnSpan="3" >
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Margin" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border Name="_Border" Padding="2" SnapsToDevicePixels="true">
                                            <ContentPresenter />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter TargetName="_Border" Property="Background" Value="#c33333"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="false">
                                                <Setter TargetName="_Border" Property="Background" Value="#c33333"/>
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch">
                                <TextBlock Text="{Binding DiscountStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" TextWrapping="Wrap"  VerticalAlignment="Center" Margin="0 0 20 0">

                                </TextBlock>
                                <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center"></TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <!--<ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" Width="Auto" Margin="4,27,4,4" ItemsSource="{Binding DisplayDiscountStructure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" ItemContainerStyle="{StaticResource alternatingStyle}" AlternationCount="2" >
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Width="Auto"  Header="Category and Price">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Width="Auto" TextAlignment="Left" Text="{Binding DiscountStr}" TextWrapping="Wrap"  />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>-->
            </Grid>
        </Border>
        <TextBlock Background="#c33333" Foreground="White" Padding="3" Margin="0,4,0,0"  TextWrapping="Wrap" Text="NEW QUOTE" TextAlignment="Center" FontWeight="Bold" FontSize="16" FontFamily="Arial" Height="24" VerticalAlignment="Top" Grid.ColumnSpan="6" />
        <Border BorderBrush="DarkGray" Margin="2,271,2,1"  BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Grid.ColumnSpan="6" >
            
            <DataGrid x:Name="dgQuoteDetails1_Copy1"  BorderBrush="#FFE0E0E0" HorizontalGridLinesBrush="#FF9C9C9C" VerticalGridLinesBrush="#FF9C9C9C" HorizontalScrollBarVisibility="Disabled" FontFamily="Verdana" 
				ItemsSource="{Binding Quote.QuoteDetails, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" GotFocus="DataGrid_CellGotFocus" IsSynchronizedWithCurrentItem="True"
				AutoGenerateColumns="False" Margin="1,1,1,1" Background="#e0e0e0" CanUserAddRows="True"   TabIndex="22" BorderThickness="0" IsEnabled="{Binding QuoteDetailsEnabled}" >
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#FF8F8F8F"/>
                </DataGrid.Resources>

                <DataGrid.RowHeaderStyle>
                    <Style TargetType="{x:Type DataGridRowHeader}">
                        <Setter Property="Content" Value="{Binding OrderLine, Mode=TwoWay}" />
                    </Style>
                </DataGrid.RowHeaderStyle>

                <DataGrid.Columns>                    
                    <!-- Order Qty -->
                    <DataGridTemplateColumn  Width="Auto" Header="Qty" x:Name="dgQuantity3">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyle}" Text="{Binding QuantityStr, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  TextAlignment="Right" FontSize="13" FontWeight="Medium" Padding="5" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox  Text="{Binding QuantityStr, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" FontSize="13" FontWeight="Medium" Padding="5" TextAlignment="Right">
                                    <i:Interaction.Behaviors>
                                        <Core:TextBoxInputBehavior InputMode="DecimalInput" JustPositivDecimalInput="false" />
                                    </i:Interaction.Behaviors>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="KeyUp" >
                                            <i:InvokeCommandAction Command="{Binding DataContext.QtyChangedCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>

                                    </i:Interaction.Triggers>
                                </TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <!--Search Product Code-->
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button ToolTip="Search products" Command="{Binding DataContext.SearchProductCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}">
                                    <Image Source="/A1RConsole;component/Images/search.png" Width="15" Height="15"/>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!-- Product Code -->
                    <DataGridTemplateColumn  Width="170" Header="Product Code">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox Padding="5"
									ItemsSource="{Binding DataContext.Product, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
									DisplayMemberPath="ProductCode"
									SelectedItem="{Binding Product, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
									SelectedValue="{Binding Product.ProductCode}"
									SelectedValuePath="ProductCode" 
									IsEditable="True" 
									IsEnabled="{Binding ProductCodeEnabled}" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged" >
                                            <i:InvokeCommandAction Command="{Binding DataContext.SelectionChangedCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>

                                    </i:Interaction.Triggers>
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox Padding="5"
									ItemsSource="{Binding DataContext.Product, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
									DisplayMemberPath="ProductCode"
									SelectedItem="{Binding Product, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
									SelectedValue="{Binding Product.ProductCode}"
									SelectedValuePath="ProductCode"
									IsEditable="True"
									IsEnabled="{Binding ProductCodeEnabled}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged" >
                                            <i:InvokeCommandAction Command="{Binding DataContext.SelectionChangedCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>

                                    </i:Interaction.Triggers>
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <!-- Product Description -->
                    <DataGridTemplateColumn  Width="*" Header="Description">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="Padding" Value="5" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyle}" Text="{Binding QuoteProductDescription,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                           TextAlignment="Left"  FontSize="13" FontWeight="Medium" Padding="5" VerticalAlignment="Center" HorizontalAlignment="Left" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox  Text="{Binding QuoteProductDescription, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  FontSize="13" 
                                          FontWeight="Medium" Padding="5"  TextAlignment="Left" VerticalAlignment="Center" HorizontalAlignment="Left" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>    
                    <!-- Stocked -->
                    <DataGridTextColumn Header="Stocked" Width="90" IsReadOnly="True" Binding="{Binding Product.LocationType, Mode=TwoWay}"  >
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Left" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Medium" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <!-- Type -->
                    <DataGridTextColumn Binding="{Binding Product.ProductUnit}" Width="auto" IsReadOnly="True" Header="Unit">
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Right" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Medium" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Price -->
                    <DataGridTemplateColumn  Width="Auto" Header="List Price">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyle}" Text="{Binding QuoteUnitPrice,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, StringFormat=\{0:c\}}"  TextAlignment="Right" FontSize="13" FontWeight="Medium" Padding="5" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox  Text="{Binding QuoteUnitPrice, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" IsEnabled="{Binding Product.PriceEditEnabled}" FontSize="13" FontWeight="Medium" Padding="5" TextAlignment="Right">
                                    <i:Interaction.Behaviors>
                                        <Core:TextBoxInputBehavior InputMode="DecimalInput" JustPositivDecimalInput="false" />
                                    </i:Interaction.Behaviors>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="KeyUp" >
                                            <i:InvokeCommandAction Command="{Binding DataContext.PriceLostFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>

                                    </i:Interaction.Triggers>
                                </TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    
                    <!-- Discount -->
                    <DataGridTemplateColumn  Width="80" Header="Discount">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Width="80" Height="25" Style="{StaticResource ResourceKey=TextBlockStyle}" Text="{Binding Discount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Right" TextAlignment="Right" Padding="5" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Width="80" Height="25" Text="{Binding Discount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Right" TextAlignment="Right" IsEnabled="{Binding IsDiscountEnabled}" Padding="5">
                                    <i:Interaction.Behaviors>
                                        <Core:TextBoxInputBehavior InputMode="DigitInput" JustPositivDecimalInput="false" />
                                    </i:Interaction.Behaviors>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="KeyUp" >
                                            <i:InvokeCommandAction Command="{Binding DataContext.DiscountLostFocusCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <!-- Total -->
                    <DataGridTextColumn Binding="{Binding Total,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, StringFormat=\{0:c\}}" Width="100" IsReadOnly="True" Header="Total" >
                        <DataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment"  Value="Center" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </Style>
                        </DataGridTextColumn.HeaderStyle>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Padding" Value="5" />
                                <Setter Property="TextAlignment" Value="Right" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="FontWeight" Value="Medium" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <!-- REMOVE -->
                    <DataGridTemplateColumn Width="50">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Button Margin="3" ToolTip="Remove product" Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"  CommandParameter="{Binding}"  >
                                        <Image Source="/A1RConsole;component/Images/remove.png" Width="15" Height="15" />
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>
        <Button Content="CLEAR" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="62" Height="24" HorizontalContentAlignment="Left" Margin="0,0,64,2" 
                Command="{Binding ClearCommand}" TabIndex="23" ToolTip="Clear form" Grid.Column="5" Grid.Row="2">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="SUBMIT" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="62" Height="24" HorizontalContentAlignment="Left" Margin="0,0,124,2" Command="{Binding SubmitCommand}" TabIndex="22" ToolTip="Submit quote" Grid.Column="4" Grid.Row="2" Grid.ColumnSpan="2">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Grid Margin="0,0,-1,0" Grid.ColumnSpan="2" Grid.Column="4" HorizontalAlignment="Right" Width="331" Grid.Row="1" Height="178" VerticalAlignment="Top" Grid.RowSpan="2">
            <Border  HorizontalAlignment="Right" Margin="0,1,3,2" Width="328" Background="White" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" />
            <TextBlock Margin="0,0,176,7" Padding="0,10,5,0" TextAlignment="Right" FontSize="20" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" HorizontalAlignment="Right" Width="149" Height="42" VerticalAlignment="Bottom"><Run Text="Total Amount"/></TextBlock>
            <TextBlock Margin="0,0,8,7" Padding="0,10,5,0" TextAlignment="Right" FontSize="20" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" HorizontalAlignment="Right" Width="165" Height="42" VerticalAlignment="Bottom"><Run Text="{Binding Quote.TotalAmount, StringFormat=\{0:c\}}"/></TextBlock>
            <TextBlock Margin="0,0,176,114" Padding="0,6,5,0" TextAlignment="Right" FontSize="16" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" Height="28" VerticalAlignment="Bottom" Width="149" HorizontalAlignment="Right"><Run Text="Discounted Total"/></TextBlock>
            <TextBlock Margin="0,0,8,114" Padding="0,6,5,0" TextAlignment="Right" FontSize="16" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="165"><Run Text="{Binding Quote.TotalBeforeTax, StringFormat=\{0:c\}}"/></TextBlock>
            <TextBlock Margin="0,0,176,52" Padding="0,6,5,0" TextAlignment="Right" FontSize="16" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="149"><Run Text="GST"/></TextBlock>
            <TextBlock Margin="0,0,8,52" Padding="0,6,5,0" TextAlignment="Right" FontSize="16" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" HorizontalAlignment="Right" Width="165" Height="28" VerticalAlignment="Bottom"><Run Text="{Binding Quote.Gst, StringFormat=\{0:c\}}"/></TextBlock>
            <TextBlock Margin="0,0,176,83" Padding="0,6,5,0" TextAlignment="Right" FontSize="16" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="149"><Run Text="Freight"/></TextBlock>
            <TextBlock Margin="0,0,8,83" Padding="0,6,5,0" TextAlignment="Right" FontSize="16" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="165"><Run Text="{Binding Quote.FreightTotal, StringFormat=\{0:c\}}"/></TextBlock>
            <CheckBox Content="GST Enabled" IsChecked="{Binding Quote.GSTActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Height="15" VerticalAlignment="Bottom" Width="72" FontSize="10" Padding="0" Margin="0,0,214,53" IsEnabled="{Binding GstEnabled}" Foreground="White" Command="{Binding GSTCheckedCommand}" />
            <TextBlock Margin="0,0,176,144" Padding="0,6,5,0" TextAlignment="Right" FontSize="16" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" Height="28" VerticalAlignment="Bottom" Width="149" HorizontalAlignment="Right"><Run Text="List Price Total"/></TextBlock>
            <TextBlock Margin="0,0,8,144" Padding="0,6,5,0" TextAlignment="Right" FontSize="16" Background="#c33333" Foreground="White" FontFamily="Arial" FontWeight="Bold" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="165"><Run Text="{Binding Quote.ListPriceTotal, StringFormat=\{0:c\}}"/></TextBlock>
        </Grid>

        <Border Margin="2,1,2,1" Background="#e0e0e0" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Grid.ColumnSpan="4" HorizontalAlignment="Stretch" Width="Auto" Grid.Row="1"  >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="129*"/>
                    <RowDefinition Height="32*"/>
                </Grid.RowDefinitions>
                <Label  Content="               Freight Code" Margin="8,6,0,0" FontFamily="Verdana"  Height="26" VerticalAlignment="Top" HorizontalAlignment="Left" Width="201"  />

                <ComboBox Padding="2,4,2,0" 
                                        IsEditable="False" 
                                        IsEnabled="{Binding QuoteDetailsEnabled}"
										ItemsSource="{Binding FreightCodeDetails, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
										DisplayMemberPath="Code"
                                        SelectedValuePath="Code"
                                        Text="{Binding SelectedFreightDetails.FreightCodeDetails.Code, UpdateSourceTrigger=PropertyChanged}" 
										SelectedItem="{Binding SelectedFreightDetails.FreightCodeDetails, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedValue="{Binding SelectedFreightDetails.FreightCodeDetails.Code}"
										HorizontalAlignment="Left"  Width="209" Margin="2,31,0,0" VerticalAlignment="Top" Height="28" TabIndex="23">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged" >
                            <i:InvokeCommandAction Command="{Binding FreightCodeChangedCommand}" CommandParameter="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <Label  Content="   Unit" Margin="213,6,0,0" FontFamily="Verdana"  Height="26" VerticalAlignment="Top" HorizontalAlignment="Left" Width="64"  />
                <TextBox TabIndex="24" Height="28" Margin="213,31,0,0" IsEnabled="False" TextWrapping="Wrap" TextAlignment="Center" Text="{Binding SelectedFreightDetails.FreightCodeDetails.Unit}" VerticalAlignment="Top"  Background="White" Padding="2,4,2,0" HorizontalAlignment="Left" Width="64" />

                <Label  Content="  Pallets" Margin="278,6,0,0" FontFamily="Verdana"  Height="26" VerticalAlignment="Top" HorizontalAlignment="Left" Width="64"  />
                <TextBox TabIndex="25" Height="28" Margin="278,31,0,0" TextWrapping="Wrap" TextAlignment="Right" Text="{Binding SelectedFreightDetails.PalletsStr,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"  Background="White" Padding="0,2,2,0" HorizontalAlignment="Left" Width="64" IsEnabled="{Binding QuoteDetailsEnabled}" >
                    <i:Interaction.Behaviors>
                        <TextBehaviors:TextBoxInputBehavior InputMode="DigitInput" JustPositivDecimalInput="false" />
                    </i:Interaction.Behaviors>
                </TextBox>

                <Label  Content="   Freight Price" Margin="344,6,0,0" FontFamily="Verdana"  Height="26" VerticalAlignment="Top" HorizontalAlignment="Left" Width="106"  />
                <currency:CurrencyTextBox  Number="{Binding SelectedFreightDetails.FreightCodeDetails.Price,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"   Padding="0,2,2,0" TextAlignment="Right" IsEnabled="{Binding SelectedFreightDetails.FreightCodeDetails.PriceEnabled,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="343,31,0,0" Height="28" VerticalAlignment="Top" HorizontalAlignment="Left" Width="109" TabIndex="26" >
                    <currency:CurrencyTextBox.BorderBrush>
                        <LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
                            <GradientStop Color="#FFABADB3" Offset="0.05"/>
                            <GradientStop Color="#FFE2E3EA" Offset="0.07"/>
                            <GradientStop Color="#FFABADB3" Offset="1"/>
                        </LinearGradientBrush>
                    </currency:CurrencyTextBox.BorderBrush>
                </currency:CurrencyTextBox>

                <Label  Content="Discount" Margin="450,6,0,0" FontFamily="Verdana"  Height="26" VerticalAlignment="Top" HorizontalAlignment="Left" Width="63"  />
                <TextBox TabIndex="27" Height="28" Margin="453,31,0,0" TextWrapping="Wrap" VerticalAlignment="Top"  Background="White" Padding="0,2,2,0" HorizontalAlignment="Left" Width="60"
                         TextAlignment="Right" Text="{Binding SelectedFreightDetails.Discount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding SelectedFreightDetails.DisEnable}">
                    <i:Interaction.Behaviors>
                        <TextBehaviors:TextBoxInputBehavior InputMode="DigitInput" JustPositivDecimalInput="false" />
                    </i:Interaction.Behaviors>
                </TextBox>

                <Label  Content="  Freight Description" Margin="516,6,0,0" FontFamily="Verdana"  Height="26" VerticalAlignment="Top" HorizontalAlignment="Left" Width="142"  />
                <TextBox TabIndex="28" Margin="515,31,2,3" TextWrapping="Wrap" TextAlignment="Left" Text="{Binding SelectedFreightDetails.FreightCodeDetails.Description,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"  Background="White" Padding="2,3,0,0" VerticalScrollBarVisibility="Auto" IsEnabled="{Binding QuoteDetailsEnabled}" />

                <Label  Content="Freight Total" Margin="0,0,117,2" FontFamily="Verdana" HorizontalAlignment="Right" Width="85" Height="24" VerticalAlignment="Bottom" Grid.Row="1"  />
                <TextBlock Margin="0,0,6,2" Padding="0,6,5,0" TextAlignment="Right" FontSize="16" Background="#e0e0e0" Foreground="Black" FontFamily="Arial" FontWeight="Bold" Height="28" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="100" Grid.Row="1"><Run Text="{Binding Quote.FreightTotal,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, StringFormat=\{0:c\}}"/></TextBlock>

                <Label Content="Transport Company" Padding="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="11,88,0,0" Width="122" Height="16"/>
                <TextBox TabIndex="34" Margin="213,85,0,0" TextWrapping="Wrap" TextAlignment="Left" 
                         Text="{Binding Quote.QuoteCourierName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                         AcceptsReturn="True"  Background="White" Padding="2,3,0,0" VerticalScrollBarVisibility="Auto" RenderTransformOrigin="0.5,0.5" IsEnabled="{Binding CourierNameEnabled}"
                         Height="23" VerticalAlignment="Top" HorizontalAlignment="Left" Width="239"  />


            </Grid>
        </Border>
        <Border Margin="2,1,0,11" Background="#e0e0e0" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Grid.Row="2" >
            <Grid>
                <Label  Content="Instructions" Margin="4,1,2,0" FontFamily="Verdana" Height="26" VerticalAlignment="Top" HorizontalAlignment="Center"  />
                <TextBox  Margin="2,27,2,2" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" Text="{Binding Quote.Instructions,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"  SpellCheck.IsEnabled="True" BorderThickness="0" IsEnabled="{Binding InstructionsEnabled}" TabIndex="29" />
            </Grid>
        </Border>
        <Border Margin="1,1,1,10" Background="#e0e0e0" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Grid.Row="2" Grid.Column="2" >
            <Grid>
                <Label  Content="Internal Comments" Margin="1,1,0,0" FontFamily="Verdana" HorizontalAlignment="Center" Height="26" VerticalAlignment="Top"  Width="127"  />
                <TextBox TabIndex="30" Margin="2,27,2,2" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" Text="{Binding Quote.InternalComments,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"  SpellCheck.IsEnabled="True" BorderThickness="0" IsEnabled="{Binding InternalCommentsEnabled}" />
            </Grid>
        </Border>
        <Border Margin="1,50,1,0" Height="37" VerticalAlignment="Top" Background="#e0e0e0" RenderTransformOrigin="1,1" BorderBrush="DarkGray" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4" Grid.Column="2" Grid.ColumnSpan="2" >
            <Grid>
                <Label  Content="Primary" Padding="0" Margin="6,1,0,0" FontFamily="Verdana" Height="15" VerticalAlignment="Top" HorizontalAlignment="Left" Width="77"  />
                <ComboBox 
        			x:Name="cmbShipTo1"
        			TabIndex="13"  
        			IsEditable="False"   
                    IsEnabled="{Binding IsPrimaryBusinessEnabled}"
	                ItemsSource="{Binding Categories, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"   
                    DisplayMemberPath="CategoryName"  
				    SelectedValuePath="CategoryName"
                    Text="{Binding SelectedCategory.CategoryName}"
                    SelectedItem="{Binding SelectedCategory, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" 
        			Background="#e1e9f7" Foreground="Black" FontFamily="Verdana" Margin="83,5,10,0" Height="23" VerticalAlignment="Top" 
        			SelectedValue="{Binding SelectedCategory.CategoryName}"  />


                <Label  Content="Business" Padding="0" Margin="6,16,0,0" FontFamily="Verdana" Height="15" VerticalAlignment="Top" HorizontalAlignment="Left" Width="77"  />
            </Grid>
        </Border>





    </Grid>
</UserControl>
