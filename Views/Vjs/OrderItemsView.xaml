<UserControl x:Class="A1RConsole.Views.Vjs.OrderItemsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:A1RConsole.Views.Vjs"
             mc:Ignorable="d" d:DesignWidth="1050" d:DesignHeight="800">

    <UserControl.Resources>
        <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander x:Name="exp" IsExpanded="True"   Background="#FFECDDAD" Foreground="Black"  Grid.Column="0" >
                            <Expander.Header>
                                <DockPanel Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}, Path=ActualWidth}"  >
                                    <StackPanel >
                                        <TextBlock Text="{Binding Items[0].State}" Padding="5" FontFamily="Verdana" FontSize="14" FontWeight="Bold" TextWrapping="Wrap"  Foreground="#FF5F5B5B" />
                                        <!--<TextBlock Text="{Binding Items[0].TotalItems}" Padding="5" FontFamily="Verdana" FontSize="14" FontWeight="Bold" TextWrapping="Wrap"  Foreground="#FF5F5B5B" />-->
                                        <TextBlock Padding="5" FontFamily="Verdana" FontSize="14" TextWrapping="Wrap" FontWeight="Bold"  Foreground="#FF5F5B5B" >
                                            <Run Text="Total Amount : "/>
                                            <Run Text="{Binding Items[0].TotalAmount,StringFormat=\{0:c\}}"/>
                                        </TextBlock>
                                    </StackPanel>
                                </DockPanel>
                            </Expander.Header>
                            <ItemsPresenter  />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <TextBlock Background="#c33333" Foreground="White" Padding="0,3,0,0" Margin="0,10,0,0" TextWrapping="Wrap" Text="PERIODIC ORDER REPORT" TextAlignment="Center" FontWeight="Bold" FontSize="16" FontFamily="Arial" Height="23" VerticalAlignment="Top"/>
        <Button Content="VIEW" HorizontalAlignment="Right" VerticalAlignment="Top" Width="62" Height="24" HorizontalContentAlignment="Left" Margin="0,207,4,0" 
            Command="{Binding ViewDataCommand}" TabIndex="3" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontFamily" Value="Arial"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock Text="From" TextAlignment="Left"  TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Arial" FontSize="12" VerticalAlignment="Top" Margin="54,59,0,0" Padding="4" Width="44" Height="21"/>
        <DatePicker SelectedDate="{Binding SelectedStartDate}" DisplayDateEnd="{Binding EndDate}" HorizontalAlignment="Left" Height="21" Margin="98,58,0,0" VerticalAlignment="Top" Width="111"/>
        <TextBlock Text="To" TextAlignment="Left"  TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Arial" FontSize="12" VerticalAlignment="Top" Margin="275,59,0,0" Padding="4" Width="26" Height="21"/>
        <DatePicker SelectedDate="{Binding SelectedEndDate}" DisplayDateEnd="{Binding EndDate}" HorizontalAlignment="Left" Height="21" Margin="301,58,0,0" VerticalAlignment="Top" Width="111"/>
       <ComboBox 
            x:Name="cmbCustomer"
            TabIndex="3"  
            IsEditable="False"
            ItemsSource="{Binding CustomerList, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"   
            DisplayMemberPath="Name"  
            SelectedValuePath="Name"
            Text="{Binding SelectedCustomer.Name}"
           
            SelectedItem="{Binding SelectedCustomer, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" 
            Background="#e1e9f7" Foreground="Black" FontFamily="Verdana" Margin="98,85,0,0" Height="23" VerticalAlignment="Top" 
            SelectedValue="{Binding SelectedCustomer.Name}" HorizontalAlignment="Left" Width="390"  />
        <TextBlock Text="Customer" TextAlignment="Left"  TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Arial" FontSize="12" VerticalAlignment="Top" Margin="32,86,0,0" Padding="4" Width="66" Height="21"/>

        <TextBlock Text="Products" TextAlignment="Left" TextWrapping="Wrap" HorizontalAlignment="Left" FontFamily="Arial" FontSize="12" VerticalAlignment="Top" 
                   Margin="32,115,0,0" Padding="4" Width="66" Height="21"/>
        
        <ListBox Name="list" Margin="98,112,0,0" HorizontalContentAlignment="Stretch" Height="1590" Width="90" HorizontalAlignment="Left"  
                 ItemsSource="{Binding VjsPartCollection}"  VerticalAlignment="Top">
            <ListBox.LayoutTransform>
                <TransformGroup>
                    <RotateTransform Angle="90"/>
                    <MatrixTransform Matrix="-1,0,0,1,0,0"/>
                </TransformGroup>
            </ListBox.LayoutTransform>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <RotateTransform Angle="-90"/>
                                <ScaleTransform ScaleX="1" ScaleY="-1" />
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">                        
                            <ComboBox Name="cmbParts" 
                                      ItemsSource="{Binding VjsProductCollection}"
                                      DisplayMemberPath="ID"
                                      SelectedValuePath="ID"  
                                      Text="{Binding SelectedPart.ID}"
                                      SelectedItem="{Binding SelectedPart, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                      HorizontalContentAlignment="Stretch" HorizontalAlignment="Left">
                            </ComboBox>
                        <Button Margin="1" ToolTip="Remove product" Command="{Binding DataContext.RemoveCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"  CommandParameter="{Binding}"  >
                            <Image Source="/A1RConsole;component/Images/remove.png" Width="15" Height="15" />
                        </Button>

                    </StackPanel>

                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
       
        <DataGrid x:Name="DgOrders"  BorderBrush="#FFE0E0E0" HorizontalGridLinesBrush="#FF9C9C9C" VerticalGridLinesBrush="#FF9C9C9C" 
            HorizontalScrollBarVisibility="Disabled" FontFamily="Verdana" IsReadOnly="True" 
            ItemsSource="{Binding OrderCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" Background="#e1e9f7" 
            CanUserAddRows="False"   BorderThickness="0" Margin="5,236,5,46" VirtualizingPanel.IsVirtualizingWhenGrouping="True">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"  Color="#FF8F8F8F"/>
            </DataGrid.Resources>
            <DataGrid.GroupStyle>
                <GroupStyle ContainerStyle="{StaticResource GroupHeaderStyle}"  >
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <DataGridRowsPresenter />
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.Columns>

                <DataGridTextColumn Header="Order NO" Width="105" IsReadOnly="False" Binding="{Binding OrderID, Mode=TwoWay}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="ToolTip" Value="Delivery Docket No" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Right" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="ToolTip" Value="Delivery Docket No" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Order Date -->
                <DataGridTextColumn Header="Order Date" Width="150" IsReadOnly="False" Binding="{Binding OrderDate, Mode=TwoWay, StringFormat=dd/MM/yyyy}"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!-- Customer -->
                <DataGridTextColumn Header="Customer" Width="auto" IsReadOnly="False" Binding="{Binding CustomerName, Mode=TwoWay}"  >
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="TextAlignment" Value="Left" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Product Items">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"  Value="Center" />
                            <Setter Property="FontSize" Value="13" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ListView ItemsSource="{Binding VjsOrderDetails}" FontFamily="Verdana" Foreground="Black">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Width="100" Header="Line NO"   >
                                            <GridViewColumn.CellTemplate >
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding LineNo}"  HorizontalAlignment="Right" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Width="140" Header="Part ID" DisplayMemberBinding="{Binding PartID}"/>
                                        <GridViewColumn Width="450" Header="Description" >
                                            <GridViewColumn.CellTemplate >
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Description}" TextWrapping="Wrap"  HorizontalAlignment="Left" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="80" Header="Qty"  >
                                            <GridViewColumn.CellTemplate >
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding OrderQty, StringFormat=0.##}"  HorizontalAlignment="Right" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="80" Header="Unit"  >
                                            <GridViewColumn.CellTemplate >
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Unit}"  HorizontalAlignment="Left" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="80" Header="Unit Price"  >
                                            <GridViewColumn.CellTemplate >
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding UnitPrice, StringFormat=\{0:c\}}"  HorizontalAlignment="Right" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="80" Header="Total"  >
                                            <GridViewColumn.CellTemplate >
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding OrderAmount, StringFormat=\{0:c\}}"  HorizontalAlignment="Right" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button Content="CLEAR" HorizontalAlignment="Right" VerticalAlignment="Top" Width="62" Height="24" HorizontalContentAlignment="Left" Margin="0,207,64,0" 
     Command="{Binding ClearCommand}" TabIndex="3" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontFamily" Value="Arial"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="EXPORT TO EXCEL" HorizontalAlignment="Right" VerticalAlignment="Top" Width="127" Height="24" HorizontalContentAlignment="Left" Margin="0,58,4,0" 
            Command="{Binding ExportToExcelCommand}" TabIndex="3" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="FontFamily" Value="Arial"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="ADD PRODUCT" HorizontalAlignment="Right" VerticalAlignment="Top" Width="85" Height="20" HorizontalContentAlignment="Left" Margin="0,115,8,0" 
            Command="{Binding AddProductCommand}" TabIndex="3" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#666666"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="10"/>
                    <Setter Property="FontFamily" Value="Arial"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="2,2,2,2" CornerRadius="4,4,4,4">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4c4c4c"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</UserControl>
